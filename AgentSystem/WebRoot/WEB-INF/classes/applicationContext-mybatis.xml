<?xml version="1.0" encoding="UTF-8"?>  
    <beans xmlns="http://www.springframework.org/schema/beans"  
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
            xmlns:aop="http://www.springframework.org/schema/aop"  
            xmlns:p="http://www.springframework.org/schema/p"  
            xmlns:tx="http://www.springframework.org/schema/tx"  
            xmlns:context="http://www.springframework.org/schema/context"  
            xsi:schemaLocation="   
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd   
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd   
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">  
           
        <!-- Properties文件读取配置，base的properties -->  
        <context:property-placeholder location="classpath:jdbc.properties"/>  
           
        <!-- JNDI获取数据源(使用dbcp连接池) -->  
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
	    <property name="driverClassName" value="${driverClassName}"/>
	    <property name="url" value="${url}"/>
	    <property name="username" value="${username}"/>
	    <property name="password" value="${password}"/>
		 <property name="initialSize" value="${initialSize}"/>
		 <property name="maxActive" value="${maxActive}"/>
		 <property name="maxIdle" value="${maxIdle}"/>
		 <property name="minIdle" value="${minIdle}"/>
		 <property name="maxWait" value="${maxWait}"/>
		 <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
		 <property name="removeAbandoned" value="${removeAbandoned}"/>
		 <!-- sql 心跳 -->
			<property name= "testWhileIdle" value="true"/>
			<property name= "testOnBorrow" value="false"/>
			<property name= "testOnReturn" value="false"/>
			<property name= "validationQuery" value="select 1"/>
			<property name= "timeBetweenEvictionRunsMillis" value="60000"/>
			<property name= "numTestsPerEvictionRun" value="${maxActive}"/>
	 	</bean> 
            
           
        <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
                <property name="dataSource" ref="dataSource" />  
        </bean>
            
        <!-- AOP 事务处理 开始 -->    
        <aop:aspectj-autoproxy />
		<aop:config  proxy-target-class="true">  
	        <!--
	        <aop:advisor pointcut="execution(* *cn.bigbackend.service..*(..))"  
	            advice-ref="txAdvice" />  
	        -->
	        <aop:pointcut expression="execution(* *org.agent.service..*(..))" id="transService"/>
	        <aop:advisor pointcut-ref="transService" advice-ref="txAdvice" />
	    </aop:config> 
		<tx:advice id="txAdvice" transaction-manager="transactionManager">  
	        <tx:attributes>  
	           <tx:method name="hl*"  propagation="REQUIRED" rollback-for="Exception"  />
	           <!-- <tx:method name="*"  propagation="REQUIRED"  read-only="true" />  --> 
	        </tx:attributes>  
	    </tx:advice>  
       	<!-- AOP 事务处理 结束 -->
  
            <!-- (Annotation方式配置services)enable component scanning (beware that this does not enable mapper scanning!) -->       
            <context:component-scan base-package="org.agent.service" />  
  
            <!-- enable autowire -->  
            <context:annotation-config />  
  
            <!-- enable transaction demarcation with annotations -->  
            <tx:annotation-driven />  
  
        <!-- define the SqlSessionFactory, notice that configLocation is not needed when you use MapperFactoryBean -->  
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
            <property name="dataSource" ref="dataSource" />  
            <property name="configLocation" value="classpath:mybatis-config.xml" />  
        </bean>  
  
        <!-- scan for mappers and let them be autowired -->  
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
            <!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->  
            <property name="basePackage" value="org.agent.dao" />  
        </bean> 
        
         
    </beans>  
